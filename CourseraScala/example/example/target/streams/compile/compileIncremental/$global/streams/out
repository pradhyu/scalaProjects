[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set()
[debug] 	added: Set()
[debug] 	modified: Set(C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\src\main\scala\example\Lists.scala)
[debug] Invalidated products: Set(C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\example\Lists$$anonfun$max$1.class, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\example\Lists.class, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\common\package.class, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\common\package$$anonfun$subFile$1.class, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\example\Lists$.class, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\common\package$.class, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes\example\Lists$$anonfun$sum$1.class)
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated sources: Set(C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\src\main\scala\example\Lists.scala)
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set(C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\src\main\scala\example\Lists.scala, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\src\main\scala\common\package.scala)
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated sources: Set(C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\src\main\scala\example\Lists.scala, C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\src\main\scala\common\package.scala)
[debug] Recompiling all 2 sources: invalidated sources (2) exceeded 50.0% of all sources
[info] Compiling 2 Scala sources to C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes...
[debug] Getting compiler-interface from component compiler for Scala 2.11.7
[debug] Getting compiler-interface from component compiler for Scala 2.11.7
[debug] Running cached compiler 6275e959, interfacing (CompilerInterface) with Scala compiler version 2.11.7
[debug] Calling Scala compiler with arguments  (CompilerInterface):
[debug] 	-deprecation
[debug] 	-bootclasspath
[debug] 	C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes;C:\Users\i65626\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar
[debug] 	-classpath
[debug] 	C:\Users\i65626\IdeaProjects\scalaProjects\CourseraScala\example\example\target\scala-2.11\classes;C:\Users\i65626\.ivy2\cache\ch.epfl.lamp\scala-grading-runtime_2.11\jars\scala-grading-runtime_2.11-0.3.jar;C:\Users\i65626\.ivy2\cache\org.scala-lang.modules\scala-pickling_2.11\jars\scala-pickling_2.11-0.10.0.jar;C:\Users\i65626\.ivy2\cache\org.scala-lang\scala-compiler\jars\scala-compiler-2.11.4.jar;C:\Users\i65626\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.11.4.jar;C:\Users\i65626\.ivy2\cache\org.scala-lang.modules\scala-xml_2.11\bundles\scala-xml_2.11-1.0.2.jar;C:\Users\i65626\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.11\bundles\scala-parser-combinators_2.11-1.0.2.jar;C:\Users\i65626\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.1.jar
[debug] Scala compilation took 3.483646936 s
[debug] New invalidations:
[debug] 	Set()
[debug] Initial set of included nodes: Set()
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] 	Set()
[debug] All newly invalidated sources after taking into account (previously) recompiled sources:Set()
